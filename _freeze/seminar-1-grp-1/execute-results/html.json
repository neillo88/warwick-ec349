{
  "hash": "ab247f430de8110714d12e74c87dd614",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Group 1: Seminar 1\"\nformat: html\n---\n\n\n\nHere is the material from today's seminar. \n\n## R Script\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```{.sourceCode .r}\n# Seminar 1 for Group 1\n\n# define values\nx <- 3 + sin(pi/2) \nx \nsqrt(x)\ny <- sqrt(x)\nz <- \"word\"\n\n# define sequence:\nv<- seq(1,10)\nv2 <- 1:10\n\n# define vectors\nw <- c(12,1,2,3)\nw\nw<-sort(w)\nmin(w)\n\n# use an index to learn about the particular value of w\nw[2]\n\n# multiply all values\nw*2\nw/2\n\n# learn about the type and length of a vector\nA <- c(\"1\",\"2\",\"5\",\"9\")\ntypeof(A)\nn <- length(A)\n\n# use these elements in a loop\nfor(i in 1:n){\n  print(A[i])\n}\n\n# coercion: change the type of value stored\nfor(i in 1:n){\n  print(as.numeric(A[i]))\n}\n\n# Use packages\n\n#install.package(\"tidyverse\")\nlibrary(tidyverse)\n\ncar_frame <- mpg\n\n# basic scatter plot\nggplot(data = car_frame) +\n  geom_point(mapping = aes(x=displ,y=hwy))\n\n# let the color of the dots change by class of vehicle\nggplot(data = car_frame) +\n  geom_point(mapping = aes(x=displ,y=hwy, color=class))\n\n# add multiple plots\nggplot(data = car_frame) +\n  geom_point(mapping = aes(x=displ,y=hwy)) + \n  geom_smooth(mapping = aes(x=displ,y=hwy))\n\n\n  \n```\n\n\n:::\n:::\n\n\n\n## R Markdown\n\nLink to published published markdown: [html](group-material/grp-1/seminar-1.html).\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n````{.sourceCode .r}\n---\ntitle: \"seminar-1\"\noutput: html_document\n---\n\n## Markdown\n\nFor example, a list\n\n- item 1\n- item 2\n\nnumbers\n\n1. number 1\n2. number 2\n\nMath\n$$\nY = X\\beta + u\n$$\nin line math: $Y= X\\beta + u$\n\n## Adding code\n\n```{r}\nlibrary(tidyverse)\ncar_frame <- mpg\nggplot(data = car_frame) +\n  geom_point(mapping = aes(x=displ,y=hwy))\n```\n````\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}